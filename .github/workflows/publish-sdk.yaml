name: Publish SDK

on:
  workflow_call:
    inputs:
      konfig_yaml_dir:
        description: "Path to directory which contains konfig.yaml"
        type: string
        required: true
      language:
        description: "The language of the SDK to publish"
        type: string
        required: true
      sdk_submodule_dirs:
        description: "Paths to directories which contain SDK submodules"
        type: string
        required: true

jobs:
  publish-sdk:
    runs-on: ubuntu-latest
    container: # runs in docker container
      image: konfigdev/test-and-publish:latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      PYPI_TOKEN_1: ${{ secrets.PYPI_TOKEN_1 }}
      PYPI_TOKEN_2: ${{ secrets.PYPI_TOKEN_2 }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      PACKAGIST_API_TOKEN: ${{ secrets.PACKAGIST_API_TOKEN }}
      GEM_HOST_API_KEY: ${{ secrets.GEM_HOST_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          submodules: ${{ inputs.language == 'php' || inputs.language == 'php7' }}

      - name: Install konfig
        uses: passiv/konfig-workflows/.github/actions/install-cli@main

      - name: Setup test env vars
        uses: passiv/konfig-workflows/.github/actions/private/inject-testing-env-vars@main
        with:
          TEST_ENV: ${{ secrets.TEST_ENV }}

      - name: Run tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 15
          max_attempts: 3
          retry_on: error
          command: cd ${{ inputs.konfig_yaml_dir }} && konfig test --filter ${{ inputs.language }}

      - name: Set git config
        run: |
          git config --global user.email "passiv-ops@passiv.com"
          git config --global user.name "Passiv Ops"
          repo=$(echo "${{ github.repository }}" | cut -d '/' -f 2)
          git config --global --add safe.directory /__w/$repo/$repo

      # If any SDKs are in submodules, then publishing might require pushing tags to the submodule repos
      - name: Set up SSH key for submodule access
        if: inputs.sdk_submodule_dirs != '' && (inputs.language == 'php' || inputs.language == 'php7')
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: |
            ${{ secrets.SUBMODULE_DEPLOY_KEY_PYTHON }}
            ${{ secrets.SUBMODULE_DEPLOY_KEY_TYPESCRIPT }}
            ${{ secrets.SUBMODULE_DEPLOY_KEY_JAVA }}
            ${{ secrets.SUBMODULE_DEPLOY_KEY_CSHARP }}
            ${{ secrets.SUBMODULE_DEPLOY_KEY_GO }}
            ${{ secrets.SUBMODULE_DEPLOY_KEY_PHP }}
            ${{ secrets.SUBMODULE_DEPLOY_KEY_PHP7 }}
            ${{ secrets.SUBMODULE_DEPLOY_KEY_RUBY }}
            ${{ secrets.SUBMODULE_DEPLOY_KEY_SWIFT }}

      - name: Setup GPG for signing
        if: inputs.language == 'java' && env.GPG_PRIVATE_KEY && env.GPG_PASSPHRASE && env.GPG_KEY_ID
        run: |
          echo "$GPG_PRIVATE_KEY" | base64 -d | gpg --batch --passphrase "$GPG_PASSPHRASE" --import
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          gpgconf --kill gpg-agent
          gpg-connect-agent reloadagent /bye

      - name: Write settings.xml file for Java publishing
        if: inputs.language == 'java'
        uses: passiv/konfig-workflows/.github/actions/private/write-settings-xml@main
        with:
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}
          ossrh_username: ${{ secrets.OSSRH_USERNAME }}
          ossrh_password: ${{ secrets.OSSRH_PASSWORD }}

      - name: Write .netrc file for Swift publishing
        if: inputs.language == 'swift'
        run: |
          printf "machine trunk.cocoapods.org\n login ${{ secrets.COCOAPODS_SESSION_EMAIL }}\n password ${{ secrets.COCOAPODS_SESSION_PASSWORD }}" > ~/.netrc
          chmod 600 ~/.netrc

      - name: Publish to Package Registry
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 15
          max_attempts: 3
          retry_on: error
          command: cd ${{ inputs.konfig_yaml_dir }} && konfig publish --generator ${{ inputs.language }} --skipTests --tolerateRepublish --skipRemoteCheck --ci
